# ajouter le repository sur le serveur

# Generating a new SSH key and adding it to the ssh-agent
https://docs.github.com/en/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent
# Adding a new SSH key to your GitHub account
https://docs.github.com/en/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account

# Generating a new SSH key and adding it to the ssh-agent to the local machine
ssh-keygen -t rsa -b 4096 -C "your_bean@selfmicro.fr"
eval "$(ssh-agent -s)"
mv alibaba-openvpn* ~/.ssh/
ssh-add ~/.ssh/alibaba-openvpn
# Adding a new SSH key to your GitHub account
cat ~/.ssh/alibaba-openvpn.pub
# dans la console administration github selectionner : Profile ==> Settings ==> SSH and GPG keys
# add the new key
# au démarrage de chaque session , pour éviter d'entre le mot de passe, ajouter au shell par défaut (avec dans le fichier x la passphrase):
vi  ~/.ssh/x
#!/bin/sh
echo bonjourselfmicro
chmod +x ~/.ssh/x
eval "$(ssh-agent -s)"
DISPLAY=1 SSH_ASKPASS="/root/.ssh/x" ssh-add /root/.ssh/alibaba-openvpn < /dev/null
# Testing your SSH connection
# Open Terminal. sur la machine locale
ssh -T git@github.com
vi ~/.bashrc
eval "$(ssh-agent -s)"
DISPLAY=1 SSH_ASKPASS="/root/.ssh/x" ssh-add /root/.ssh/alibaba-openvpn < /dev/null
# suppression des process maj Alibaba
pkill Ali
# cloner le repository sur la machine locale:
git clone git@github.com:captain-jak/openvpn-tools.git

#ajouter un fichier au repository:
git add <nom-du-fichier>
#supprimer un fichier au repository:
git rm <nom-du-fichier>

# valider les changements 
git commit -a -m "Change du serveur"
git push

# détruire le repository sur le serveur


# List your existing remotes repository
git remote -v

# Change your remote's URL from SSH to HTTPS 
git remote set-url origin https://github.com/captain-jak/openvpn-tools.git
# ou inversement
git remote set-url --add origin git@github.com:captain-jak/openvpn-tools.git
# et
git remote set-url --delete origin https://github.com/captain-jak/openvpn-tools.git
